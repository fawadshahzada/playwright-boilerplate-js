name: Test

env:
  CI: true
  DEBUG: pw:api

on:
  push:

jobs:
  run:
    strategy:
      matrix:
        node: ['18']
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Collect Workflow Telemetry
        uses: runforesight/foresight-workflow-kit-action@v1
        if: ${{ always() }}
        with:
          api_key: ${{secrets.ACCES_TOKEN}}
      - name: npm ci
        run: npm ci --legacy-peer-deps
      - name: install Playwright
        run: npx playwright install --with-deps > /dev/null
      - name: install Allure globally
        run: npm install -g allure-commandline --save-dev
      - name: run features
        run: npm run test
      - name: Generate Allure report
        run: allure generate
      - name: Checkout gh-pages branch
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git clone --depth=1 --branch=gh-pages https://x-access-token:${{ secrets.ACCES_TOKEN }}@github.com/${{ github.repository }} gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.ACCES_TOKEN }}

      - name: Copy files to gh-pages branch
        run: |
          cp -r allure-report/* gh-pages/
        env:
          GITHUB_TOKEN: ${{ secrets.ACCES_TOKEN }}
      - name: Upload Allure report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report/
      - name: Deploy Allure report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.ACCES_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages

      # - name: Upload test results
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: test-result-report
      #     path: reports/cucumber-report.html
